<?php include 'header.php';?>

    <div class="heading" style="background-image: url(images/headlines.jpg)";>
        <h1>دامنه متغیرها</h1>
    </div>

    <!-- comment section -->

    <section class="main-content">
        <div class="content">
            <p>در این آموزش با دامنه متغیرها در جاوا اسکریپت (JavaScript) به کمک مثال های مختلف آشنا خواهید شد.</p>
            <p>دامنه (Scope) یعنی اینکه متغیرها و توابع در چه قسمت هایی از کد قابل دسترس و استفاده هستند.</p>
            <p>در جاوا اسکریپت یک متغیر دو نوع دامنه دارد:</p>
            <ul><li>سراسری (Global)</li>
            <li>محلی (Local)</li></ul>
            <h1>دامنه سراسری</h1>
            <p>متغیری که در ابتدای برنامه یا خارج از یک تابع تعریف شود به عنوان یک متغیر با دامنه سراسری در نظر گرفته خواهد شد و به آن متغیر سراسری گفته می شود که در همه جای برنامه قابل دسترس است.</p>
            <p>نمونه ای از یک متغیر سراسری را در مثال زیر می بینیم:</p>
            <div class="code">
                <p>// برنامه چاپ یک متن <br>
                
                let a = “hello”; <br>
                
                function greet () { <br>
                
                console.log(a); <br>
                
                } <br>
                
                greet(); // hello</p>
            </div>
            <p>در این برنامه متغیر a در ابتدای برنامه تعریف شده و یک متغیر سراسری است. یعنی اینکه از متغیر a می توان در هر کجای برنامه استفاده کرد.</p>
            <p>مقدار یک متغیر سراسری را می توان در داخل یک تابع تغییر داد. مثال،</p>
            <div class="code">
                <p>// برنامه تغییر مقدار یک متغیر سراسری <br>
                
                let a = “hello”; <br>
                
                function greet() { <br>
                
                a = 3; <br>
                
                } <br>
                
                // قبل از فراخوانی تابع <br>
                
                console.log(a); // hello <br>
                
                // بعد از فراخوانی تابع <br>
                
                greet(); <br>
                
                console.log(a); // 3</p>
            </div>
            <p>در این برنامه متغیر a یک متغیر سراسری است که مقدار اولیه آن برابر با hello است. دستور console.log(a) قبل از فراخوانی تابع greet همین مقدار را نمایش می دهد. با فراخوانی تابع greet مقدار متغیر a به مقدار ۳ تغییر می کند و در نهایت دستور console.log(a) بعد از فراخوانی تابع مقدار ۳ را نمایش می دهد.</p>
            <p><b>نکته:</b> بهتر است از به کار بردن متغیرهای سراسری اجتناب کنید چونکه مقدار متغیر در قسمت های مختلف برنامه قابل تغییر است و این می تواند نتایج ناشناخته و غیرقابل پیش بینی به وجود آورد.</p>
            <p>در جاوا اسکریپت می توان یک متغیر را بدون تعریف استفاده کرد. اگر یک متغیر بدون تعریف استفاده شود آن متغیر به طور خودکار به یک متغیر سراسری تبدیل می شود.</p>
            <p>مثال،</p>
            <div class="code">
                <p>function greet() { <br>
                
                a = “hello” <br>
                
                } <br>
                
                greet(); <br>
                
                console.log(a); // hello</p>
            </div>
            <p>در این برنامه متغیر a یک متغیر سراسری است.</p>
            <p>اگر متغیر a درون تابع با دستور “let a = “hello تعریف شده بود، برنامه خطا نشان می داد. چون این تعریف متغیر a را به یک متغیر محلی تبدیل می کرد که فقط در درون تابع قابل دسترسی است.</p>
            <p>استفاده از متغیر تعریف نشده و مقداردهی نشده نیز منجر به خطا می شود.</p>
            <p><b>نکته:</b> در جاوا اسکریپت strict mode یا “حالت سخت” وجود دارد که قابل تعریف نیز هست. در این حالت بدون تعریف متغیر نمیتوان از آن استفاده کرد.</p>
            <h1>دامنه محلی</h1>
            <p>یک متغیر می تواند دامنه محلی داشته باشد، به عنوان مثال متغیرهایی که در تابع تعریف می شوند فقط در داخل همان تابع قابل دسترسی هستند.</p>
            <p>مثال ۱: متغیر با محدوده محلی</p>
            <div class="code">
                <p>// برنامه نمایش محدوده محلی یک متغیر <br>
                
                let a = “hello”; <br>
                
                function greet() { <br>
                
                let b = “World” <br>
                
                console.log(a + b); // helloWorld <br>
                
                } <br>
                
                greet(); <br>
                
                console.log(a + b); // خطا</p>
            </div>
            <p>خروجی</p>
            <div class="code">
                <p>helloWorld <br>
                
                Uncaught ReferenceError: b is not defined</p>
            </div>
            <p>در این برنامه متغیر a یک متغیر سراسری است و متغیر b یک متغیر محلی برای تابع greet است. متغیر b فقط در داخل تابع قابل دسترسی است و به همین دلیل با استفاده از متغیر b خارج از تابع، خطا در برنامه رخ می دهد.</p>
            <h1>let محدوده بلوکی دارد</h1>
            <p>کلمه کلیدی let برای تعریف متغیر دارای محدوده بلوکی است یعنی فقط در همان بلوکی که در آن قرار گرفته قابل دسترسی است.</p>
            <p>مثال ۲: متغیر با محدوده بلوکی</p>
            <div class="code">
                <p>// برنامه نمایش مفهوم محدوده بلوکی <br>
                
                // متغیر سراسری <br>
                
                let a = ‘Hello’; <br>
                
                function greet() { <br>
                
                // متغیر محلی <br>
                
                let b = ‘World’; <br>
                
                console.log(a + ‘ ‘ + b); <br>
                
                if (b == ‘World’) { <br>
                
                // متغیر با محدوده بلوکی <br>
                
                let c = ‘hello’; <br>
                
                console.log(a + ‘ ‘ + b + ‘ ‘ + c); <br>
                
                } <br>
                
                // قابل دسترس نیست c متغیر <br>
                
                console.log(a + ‘ ‘ + b + ‘ ‘ + c); <br>
                
                } <br>
                
                greet();</p>
            </div>
            <p>خروجی</p>
            <div class="code">
                <p>Hello World <br>
                
                Hello World hello <br>
                
                Uncaught ReferenceError: x is not defined</p>
            </div>
            <p>در برنامه بالا متغیر،</p>
            <ul><li>a یک متغیر سراسری است و در همه جای برنامه قابل دسترسی است.</li>
            <li>b یک متغیر محلی است و فقط در داخل تابع greet قابل دسترسی است.</li>
            <li>c یک متغیر با محدوده بلوکی است و فقط در داخل بلوک دستور if قابل دسترسی است.</li></ul>
            <p>بنابراین دو دستور console.log() اول بدون هیچ مشکلی کار می کنند.</p>
            <p>اما با استفاده از متغیر c در دستور console.log(a + ‘ ‘ + b + ‘ ‘ + c); بعد از بلوک if برنامه خطا می دهد.</p>
            <p><b>نکته:</b> در جاوا اسکریپت var محدوده تابعی (function scoped) دارد و let دارای محدوده بلوکی (block scoped) است. اگر در داخل بلوک دستور if به جای let c = ‘hello’; از کد var c = ‘hello’; استفاده شود، خطای رخ نمی دهد. زیرا تعریف متغیر c با کلمه کلیدی var آن را تبدیل به یک متغیر با محدوده تابعی می کند پس در نتیجه در کل تابع greet قابل دسترس است. ولی خارج از تابع استفاده از متغیر c نیز منجر به خطا می شود.</p>
        </div>
    </section>

    <!-- comment section -->

<?php include 'footer.php';?>