<?php include 'header.php';?>

    <div class="heading" style="background-image: url(images/headlines.jpg)";>
        <h1>حلقه while و do…while</h1>
    </div>

    <!-- comment section -->

    <section class="main-content">
        <div class="content">
            <p>در این آموزش به کمک مثال های مختلف با حلقه های while و do…while در جاوا اسکریپت (JavaScript) آشنا خواهید شد.</p>
            <p>در برنامه نویسی از حلقه ها برای تکرار اجرای مجموعه ای از کدها استفاده می شود.</p>
            <p>به عنوان مثال اگر می خواهید یک پیام را ۱۰۰ بار نشان دهید می توانید از یک حلقه استفاده کنید. این فقط یک مثال ساده است، به کمک حلقه ها کارهای زیادی می توانید انجام دهید.</p>
            <h1>حلقه while در جاوا اسکریپت</h1>
            <h1>ساختار حلقه while:</h1>
            <div class="code">
                <p>while (شرط) {
                
                // while بدنه حلقه
                
                }</p>
            </div>
            <h1>مراحل حلقه while:</h1>
            <p>۱- ابتدا شرط داخل پرانتز () بررسی می شود.</p>
            <p>۲- اگر شرط درست و برقرار باشد، مقدار true را برمی گرداند و سپس کد داخل حلقه while اجرا می شود.</p>
            <p>۳- پس از اجرای کدهای داخل حلقه، دوباره شرط حلقه بررسی می شود.</p>
            <p>۴- این روند تا زمانی ادامه می یابد که شرط نادرست شود و مقدار false برگرداند .</p>
            <p>۵- زمانی که شرط برقرار نشود، حلقه متوقف می شود.</p>
            <p>برای کسب اطلاعات بیشتر در مورد عبارت های شرطی به مبحث آموزش عملگرهای مقایسه ای و منطقی مراجعه کنید.</p>
            <p>جریان حلقه while با نمودار:</p>
            <div class="image">
            <img src="images/img8.jpg" alt=""></div>
            <p>مثال ۱: نمایش اعداد ۱ تا ۵</p>
            <div class="code">
                <p>// برنامه نمایش اعداد از ۱ تا ۵ <br>
                
                // مقداردهی اولیه متغیرها <br>
                
                let i = 1, n = 5; <br>
                
                // تا ۵ تکرار می شود i = 1 حلقه از break
                
                while (i <= n) { <br>
                
                console.log(i); <br>
                
                i += 1; <br>
                
                }</p>
            </div>
            <p>خروجی</p>
            <div class="code">
                <p>۱ <br>
                
                ۲ <br>
                
                ۳ <br>
                
                ۴ <br>
                
                ۵</p>
            </div>
            <p>در جدول زیر مراحل و شیوه کار برنامه بالا توضیح داده شده است:</p>
            <table cellspacing=0 class="table">
                <tr>
                    <th>عمل</th>
                    <th>شرط: i <= n	</th>
                    <th>متغیر </th>
                    <th>شماره تکرار</th>
                </tr>
                <tr>
                    <td>۱ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۲ افزایش می یابد. </td>
                    <td>true</td>
                    <td>i = 1 <br> n = 5</td>
                    <td>اول</td>
                </tr>
                <tr>
                    <td>۲ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۳ افزایش می یابد.</td>
                    <td>true</td>
                    <td>i = 2 <br>
                    n = 5</td>
                    <td>دوم</td>
                </tr>
                <tr>
                    <td>۳ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۴ افزایش می یابد.
                    </td>
                    <td>true</td>
                    <td>i = 3 <br>
                    n = 5	</td>
                    <td>سوم</td> 
                </tr>
                <tr>
                    <td>۴ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۵ افزایش می یابد.</td>
                    <td>true</td>
                    <td>i = 4 <br>
                    n = 5	</td>
                    <td>چهارم</td>
                </tr>
                <tr>
                    <td>۵ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۶ افزایش می یابد.
                    </td>
                    <td>true</td>
                    <td>i = 5 <br>
                    n = 5	</td>
                    <td>پنجم</td>
                </tr>
                <tr>
                    <td>حلقه تمام می شود.</td>
                    <td>false</td>
                    <td>i = 6 <br>
                    n = 5</td>
                    <td>ششم</td>
                </tr>
            </table>
            <p>مثال ۲: مجموع اعداد مثبت</p>
            <div class="code">
                <p>// برنامه محاسبه و نمایش مجموع اعداد مثبت <br>
                
                // اگر کاربر عدد منفی وارد کند، حلقه پایان می یابد <br>
                
                // عدد منفی وارد شده به مقدار مجموع اضافه نمی شود <br>
                
                let sum = 0; <br>
                
                // عدد ورودی از کاربر گرفته می شود <br>
                
                let number = parseInt(prompt(‘Enter a number: ‘)); <br>
                
                while(number >= 0) { <br>
                
                // عدد مثبت وارد شده را به مجموع قبلی اضافه می کند <br>
                
                sum += number; <br>
                
                // دوباره عدد از کاربر گرفته می شود <br>
                
                number = parseInt(prompt(‘Enter a number: ‘)); <br>
                
                } <br>
                
                // نمایش مجموع اعداد وارد شده توسط کاربر <br>
                
                console.log(`The sum is ${sum}.`);</p>
            </div>
            <p>خروجی</p>
            <div class="code">
                <p>Enter a number: 2 <br>
                
                Enter a number: 5 <br>
                
                Enter a number: 7 <br>
                
                Enter a number: 0 <br>
                
                Enter a number: -3 <br>
                
                The sum is 14.</p>
            </div>
            <p>در این برنامه ابتدا از کاربر خواسته می شود که یک عدد وارد کند.</p>
            <p>با نوشتن ()prompt، کاربر می تواند یک مقدار رشته ای وارد کند. عملگر + برای رشته ها عملگر الحاق است یعنی اگر به طور مستقیم روی رشته های اعمال شود، آنها را به هم وصل می کند، مانند، ‘۲’ + ‘۳’ = ‘۲۳’. به همین دلیل از ()parseInt برای تبدیل مقدار رشته ورودی به عدد استفاده می شود.</p>
            <p>حلقه while تا زمانی تکرار می شود که کاربر عدد منفی (یا رشته غیرعددی) وارد کند. در هر تکرار، عدد وارد شده توسط کاربر به مقدار قبلی متغیر sum اضافه می شود. متغیر sum مجموع اعداد ورودی را ذخیره می کند.</p>
            <p>وقتی کاربر یک عدد منفی وارد کند، حلقه تمام می شود. در نهایت در بیرون از حلقه، مجموع همه اعداد مثبت وارد شده توسط کاربر نمایش داده می شود.</p>
            <h1>حلقه do…while در جاوا اسکریپت</h1>
            <h1>ساختار حلقه do…while:</h1>
            <div class="code">
                <p>do { <br>
                
                // بدنه حلقه <br>
                
                } while(شرط)</p>
            </div>
            <p>۱- ابتدا کد داخل حلقه do اجرا می شود سپس شرط بررسی می شود.</p>
            <p>۲- اگر شرط درست و برقرار باشد، مقدار true را برمی گرداند و دوباره کد داخل حلقه do اجرا می شود.</p>
            <p>۳- شرایط دوباره بررسی می شود.</p>
            <p>۴- اگر شرط درست باشد، کدهای دستور do دوباره اجرا می شود.</p>
            <p>۵- این روند تا زمانی ادامه می یابد که شرط نادرست شود و حلقه را متوقف کند.</p>
            <p><b>نکته:</b> حلقه do…while شبیه حلقه while است. تنها تفاوتشان این است که در حلقه do…while کد بدنه حلقه حداقل یکبار اجرا می شود.</p>
            <h1>جریان حلقه do…while با نمودار</h1>
            <div class="image">
            <img src="images/img9.jpg" alt=""></div>
            <p>مثال ۳: نمایش اعداد ۱ تا ۵</p>
            <div class="code">
                <p>// برنامه نمایش اعداد  <br>
                
                let i = 1; <br>
                
                let n = 5; <br>
                
                // حلقه از ۱ تا ۵ تکرار می شود <br>
                
                do { <br>
                
                console.log(i); <br>
                
                i++; <br>
                
                } while(i <= n);</p>
            </div>
            <p>خروجی</p>
            <div class="code">
                <p>۱ <br>
                
                ۲ <br>
                
                ۳ <br>
                
                ۴ <br>
                
                ۵</p>
            </div>
            <p>در جدول زیر مراحل و شیوه کار برنامه بالا توضیح داده شده است:</p>
            <table cellspacing=0 class="table">
                <tr>
                    <th>عمل</th>
                    <th>شرط: i <= n	</th>
                    <th>متغیر </th>
                    <th>شماره تکرار</th>
                </tr>
                <tr>
                    <td>۱ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۲ افزایش می یابد. </td>
                    <td>بررسی نمی شود</td>
                    <td>i = 1 <br> n = 5</td>
                    <td></td>
                </tr>
                <tr>
                    <td>۲ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۳ افزایش می یابد.</td>
                    <td>true</td>
                    <td>i = 2 <br>
                    n = 5</td>
                    <td>اول</td>
                </tr>
                <tr>
                    <td>۳ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۴ افزایش می یابد.
                    </td>
                    <td>true</td>
                    <td>i = 3 <br>
                    n = 5	</td>
                    <td>دوم</td> 
                </tr>
                <tr>
                    <td>۴ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۵ افزایش می یابد.</td>
                    <td>true</td>
                    <td>i = 4 <br>
                    n = 5	</td>
                    <td>سوم</td>
                </tr>
                <tr>
                    <td>۵ چاپ می شود.<br>
                    مقدار متغیر i به مقدار ۶ افزایش می یابد.
                    </td>
                    <td>true</td>
                    <td>i = 5 <br>
                    n = 5	</td>
                    <td>چهارم</td>
                </tr>
                <tr>
                    <td>حلقه تمام می شود.</td>
                    <td>false</td>
                    <td>i = 6 <br>
                    n = 5</td>
                    <td>پنجم</td>
                </tr>
            </table>
            <p>مثال ۴: مجموع اعداد مثبت</p>
            <div class="code">
                <p>// برنامه محاسبه و نمایش مجموع اعداد مثبت  <br>
                
                // اگر کاربر عدد منفی وارد کند، حلقه پایان می یابد <br>
                
                // عدد منفی وارد شده به مقدار مجموع اضافه نمی شود <br>
                
                let sum = 0; <br>
                
                let number = 0; <br>
                
                do { <br>
                
                sum += number; <br>
                
                number = parseInt(prompt(‘Enter a number: ‘)); <br>
                
                } while(number >= 0) <br>
                
                console.log(`The sum is ${sum}.`);</p>
            </div>
            <p>خروجی ۱</p>
            <div class="code">
                <p>Enter a number: 2 <br>
                
                Enter a number: 4 <br>
                
                Enter a number: -500 <br>
                
                The sum is 6.</p>
            </div>
            <p>در اینجا حلقه do…while تا زمانی تکرار می شود که کاربر عدد منفی وارد کند. وقتی عدد ورودی منفی باشد، حلقه متوقف میشود. عدد منفی وارد شده به مجموع اضافه نمی شود. متغیر sum مجموع اعداد مثبت وارد شده را ذخیره می کند.</p>
            <p>خروجی ۲</p>
            <div class="code">
                <p>Enter a number: -80  <br>
                
                The sum is 0.</p>
            </div>
            <p>اگر کاربر عدد منفی وارد کند، بدنه حلقه do…while فقط یکبار اجرا می شود.</p>
            <h1>حلقه بی نهایت</h1>
            <p>اگر شرط یک حلقه همیشه درست یا true باشد، حلقه برای نامحدود اجرا و تکرار می شود (تا زمانی که حافظه پر شود). مثال،</p>
            <div class="code">
                <p>//بی نهایت whileحلقه <br>
                
                while(true){ <br>
                
                // بدنه حلقه <br>
                
                }</p>
            </div>
            <p>مثالی از حلقه do…while بی نهایت:</p>
            <div class="code">
                <p>//بی نهایت do…whileحلقه <br>
                
                let count = 1; <br>
                
                do { <br>
                
                // بدنه حلقه <br>
                
                } while(count == 1)</p>
            </div>
            <p>در برنامه های بالا شرط همیشه درست است. بنابراین بدنه حلقه بی نهایت اجرا خواهد شد.</p>
            <h1>حلقه های for و while</h1>
            <p>حلقه for معمولاً زمانی اسفاده می شود که تعداد تکرارها مشخص باشد. مثال،</p>
            <div class="code">
                <p>// حلقه ۵ بار تکرار می شود <br>
                
                for (let i = 1; i <=5; ++i) { <br>
                
                // بدنه حلقه <br>
                
                }</p>
            </div>
            <p>حلقه های while و do…while معمولاً زمانی استفاده می شوند که تعداد تکرارها مشخص نباشد. مثال،</p>
            <div class="code">
                <p>while (شرط) { <br>
                
                // بدنه حلقه <br>
                
                }</p>
            </div>
        </div>
    </section>

    <!-- comment section -->

<?php include 'footer.php';?>